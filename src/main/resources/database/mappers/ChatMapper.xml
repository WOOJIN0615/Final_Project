<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.spring.app.chat.ChatDAO">
  
  	<select id="getRoomList" resultMap="roomMap">
		SELECT *
		  FROM CHAT_ROOM CR
		 INNER JOIN CHAT_ROOM_MEMBER CRM
		 USING (ROOM_ID)
		 INNER JOIN CHAT_MESSAGE CM
		 USING (ROOM_ID)
		 WHERE USERNAME=#{username}
		 ORDER BY MESSAGE_ID DESC
  	</select>
  	
  	<select id="getRoomDetail" resultType="ChatRoomVO">
  		SELECT * 
  		  FROM CHAT_ROOM
  		 WHERE ROOM_ID=#{roomId}
  	</select>
  	
  	<select id="getMessageByRoom" resultType="ChatMessageVO">
  		SELECT *
  		  FROM CHAT_MESSAGE
  		 WHERE ROOM_ID=#{roomId}
  		 ORDER BY MESSAGE_ID ASC
  	</select>
  	
  	<select id="getUserByRoom" resultType="RoomMemberVO">
  		SELECT U.USERNAME, C.ROOM_ID, U.SNS, U.FILE_NAME
  		  FROM USER U
  		 INNER JOIN CHAT_ROOM_MEMBER C
  		 USING (USERNAME)
  		 WHERE ROOM_ID=#{roomId}
  	</select>
  	
  	<select id="getUserNotInRoom" resultType="string">
  		SELECT F.FRIEND_ID
  		  FROM (
  		SELECT USER2_ID AS FRIEND_ID
  		  FROM FRIENDSHIP
  		 WHERE USER1_ID=#{username}
  		 UNION
  		SELECT USER1_ID AS FRIEND_ID
  		  FROM FRIENDSHIP
  		 WHERE USER2_ID=#{username}
  		 	   ) F
  		 WHERE F.FRIEND_ID 
  		   NOT IN (
  		SELECT USERNAME
  		  FROM CHAT_ROOM_MEMBER
  		 WHERE ROOM_ID=#{roomId}
  		          )
  	</select>
  	
  	<select id="getUserImgInRoom" resultType="string">
  		SELECT DISTINCT FILE_NAME
  		  FROM USER U
  		 INNER JOIN CHAT_MESSAGE C
  		    ON U.USERNAME=C.SENDER_ID
  		 WHERE U.USERNAME=#{username}
  		   AND C.ROOM_ID=#{roomId}
  	</select>
  	
  	<select id="getUserSnsInRoom" resultType="string">
  		SELECT DISTINCT SNS
  		  FROM USER U
  		 INNER JOIN CHAT_MESSAGE C
  		    ON U.USERNAME=C.SENDER_ID
  		 WHERE U.USERNAME=#{username}
  		   AND C.ROOM_ID=#{roomId}
  	</select>
  	
  	<delete id="outUser" parameterType="RoomMemberVO">
  		DELETE FROM CHAT_ROOM_MEMBER
  		 WHERE USERNAME=#{username} AND ROOM_ID=#{roomId}
  	</delete>
  	
  	<update id="renameRoom" parameterType="ChatRoomVO">
  		UPDATE CHAT_ROOM
  		   SET ROOM_NAME=#{roomName}
  		 WHERE ROOM_ID=#{roomId}
  	</update>
  	
  	<select id="findRoomByMsg" resultType="long">
  		SELECT ROOM_ID
  		  FROM CHAT_MESSAGE
  		 INNER JOIN
  		       CHAT_ROOM
  		 USING (ROOM_ID)
  		 WHERE SENDER_ID IN (#{user1}, #{user2}) AND ROOM_TYPE='1:1 채팅'
  		 GROUP BY ROOM_ID
  		HAVING COUNT(DISTINCT SENDER_ID)=2
  	</select>
  	
  	<update id="changeHost" parameterType="ChatRoomVO">
  		UPDATE CHAT_ROOM
  		   SET CREATED_BY=#{createdBy}
  		 WHERE ROOM_ID=#{roomId}
  	</update>
  	
  	<update id="readMessage" parameterType="RoomMemberVO">
  		UPDATE CHAT_ROOM_MEMBER
  		   SET LAST_READ_MESSAGE=(
  		SELECT MAX(MESSAGE_ID)
  		  FROM CHAT_MESSAGE
  		 WHERE ROOM_ID=#{roomId}   
  		   )
  		 WHERE ROOM_ID=#{roomId}
  		   AND USERNAME=#{username}
  	</update>
  	
  	<select id="getUnreadMessage" resultType="long">
  		SELECT COUNT(*) AS unreadCount
  		  FROM CHAT_MESSAGE cm
  		  JOIN CHAT_ROOM_MEMBER rm
  		    ON cm.ROOM_ID=rm.ROOM_ID
  		 WHERE cm.ROOM_ID=#{roomId}
  		   AND rm.USERNAME=#{username}
  		   AND cm.MESSAGE_ID>COALESCE(rm.LAST_READ_MESSAGE, 0); 
  	</select>
  	
  	<select id="getUnreadMember" resultType="long">
  		SELECT COUNT(*)-(
  		SELECT COUNT(*) AS otherReadCount
  		  FROM CHAT_ROOM_MEMBER rm
  		 WHERE rm.ROOM_ID=#{roomId}
  		   AND rm.LAST_READ_MESSAGE>=#{messageId}
  		) FROM CHAT_ROOM_MEMBER
  		 WHERE ROOM_ID=#{roomId}
  	</select>
  	
  	<select id="getLastMessageTime" resultType="String">
  		SELECT CREATED_AT
  		  FROM CHAT_MESSAGE
  		 WHERE ROOM_ID=#{roomId}
  		   AND MESSAGE_ID=(
  		SELECT MAX(MESSAGE_ID)
  		  FROM CHAT_MESSAGE
  		 WHERE ROOM_ID=#{roomId}
  		 )
  	</select>
  	
  	<select id="getLastMessage" resultType="String">
  		SELECT CONTENTS
  		  FROM CHAT_MESSAGE
  		 WHERE ROOM_ID=#{roomId}
  		   AND MESSAGE_ID=(
  		SELECT MAX(MESSAGE_ID)
  		  FROM CHAT_MESSAGE
  		 WHERE ROOM_ID=#{roomId}
  		)
  	</select>
  	
  	<select id="findRoom" resultType="long">
  		SELECT ROOM_ID
  		  FROM CHAT_ROOM_MEMBER
  		 INNER JOIN
  		       CHAT_ROOM
  		 USING (ROOM_ID)  		  
  		 WHERE USERNAME IN (#{user1}, #{user2}) AND ROOM_TYPE='1:1 채팅'
  		 GROUP BY ROOM_ID
  		HAVING COUNT(DISTINCT USERNAME)=2
  	</select>
  	
  	<delete id="deleteRoom" parameterType="ChatRoomVO">
  		DELETE FROM CHAT_ROOM WHERE ROOM_ID=#{roomId}
  	</delete>
  	
  	<select id="getLastMsg" resultType="ChatMessageVO">
  		SELECT CONTENTS, CREATED_AT
  		  FROM CHAT_MESSAGE
  		 WHERE CREATED_AT=
  		  (
  		SELECT MAX(CREATED_AT)
  	      FROM CHAT_MESSAGE
  	     WHERE ROOM_ID=#{roomId}
  	      )
  	       AND MESSAGE_ID=
  	      (
  	    SELECT MAX(MESSAGE_ID)
  	      FROM CHAT_MESSAGE
  	     WHERE ROOM_ID=#{roomID}
  	      )
  	</select>
  	
  	<resultMap type="ChatRoomVO" id="roomMap">
  		<id column="ROOM_ID" property="roomId"/>
  		<result column="ROOM_NAME" property="roomName"/>
  		<result column="ROOM_TYPE" property="roomType"/>
  		<result column="CREATED_AT" property="createdAt"/>
  		<result column="CREATED_BY" property="createdBy"/>
		<association javaType="RoomMemberVO" property="roomMemberVO">
			<id column="USERNAME" property="username"/>
			<result column="JOINED_AT" property="joinedAt"/>
			<result column="LAST_READ_MESSAGE" property="lastReadMessage"/>
		</association>
		<association property="chatMessageVO" javaType="ChatMessageVO">
			<id column="MESSAGE_ID" property="messageId"/>
			<result column="SENDER_ID" property="senderId"/>
			<result column="CONTENTS" property="contents"/>
			<result column="MESSAGE_TYPE" property="messageType"/>
			<result column="CREATED_AT" property="createdAt"/>
			<result column="READSTATUS" property="readStatus"/>
		</association>
  	</resultMap>
  	
  	<resultMap type="UserVO" id="userMap">
  		<id column="USERNAME" property="username"/>
  		<result column="SNS" property="sns"/>
  		<result column="FILE_NAME" property="fileName"/>
  		<association property="chatRoomVO" javaType="ChatRoomVO">
  			<id column="ROOM_ID" property="roomId"/>
  		</association>
  	</resultMap>
  	
  	<insert id="makeChat" parameterType="ChatRoomVO" useGeneratedKeys="true" keyProperty="roomId">
  		INSERT INTO CHAT_ROOM (ROOM_NAME, ROOM_TYPE, CREATED_AT) VALUES (#{roomName}, '1:1 채팅', NOW())
  	</insert>
  	
  	<insert id="makeRoom" parameterType="ChatRoomVO" useGeneratedKeys="true" keyProperty="roomId">
  		INSERT INTO CHAT_ROOM (ROOM_NAME, ROOM_TYPE, CREATED_AT, CREATED_BY) VALUES (#{roomName}, '그룹 채팅', NOW(), #{createdBy})
  	</insert>
  	
  	<insert id="insertMember" parameterType="RoomMemberVO">
  		INSERT INTO CHAT_ROOM_MEMBER VALUES (#{roomId}, #{username}, NOW(), #{lastReadMessage})
  	</insert>
  	
  	<insert id="insertMessage" parameterType="ChatMessageVO" useGeneratedKeys="true" keyProperty="messageId">
  		INSERT
  		  INTO CHAT_MESSAGE (ROOM_ID, SENDER_ID, CONTENTS, MESSAGE_TYPE, CREATED_AT)
  		VALUES (#{roomId}, #{senderId}, #{contents}, #{messageType}, #{createdAt})
  	</insert>
  	
  </mapper>
